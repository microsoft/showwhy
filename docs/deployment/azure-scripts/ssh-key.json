{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "vaultName": {
            "type": "string",
            "metadata": {
                "description": "The name of the keyVault to store the keys in."
            }
        },
        "identityName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Managed identity"
            }
        }
    },
    "variables": {
        "secretName": "privateKey",
        "scriptName": "createKeys",
        "_artifactsLocation": "https://raw.githubusercontent.com/microsoft/showwhy/azure/docs/deployment/azure-scripts/",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), variables('roleDefinitionId'), resourceGroup().id)]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('scriptName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('roleDefinitionName')]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": { /*ttk bug*/
                    }
                }
            },
            "kind": "AzureCLI",
            "properties": {
                "forceUpdateTag": "[parameters('newGuid')]",
                "AzCliVersion": "2.0.80",
                "timeout": "PT30M",
                "retentionInterval": "P1D",
                "cleanupPreference": "OnSuccess",
                "primaryScriptUri": "[uri(variables('_artifactsLocation'), 'ssh-key.sh')]"
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "storeSshKeys",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "keys": {
                        "value": "[reference(variables('scriptName')).outputs.keyinfo]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "secretName": {
                        "value": "[variables('secretName')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "keys": {
                            "type": "secureObject"
                        },
                        "vaultName": {
                            "type": "string"
                        },
                        "secretName": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('vaultName'), '/', parameters('secretName'))]",
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "value": "[parameters('keys').privateKey]"
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "publicKey": {
            "type": "string",
            "value": "[reference(variables('scriptName')).outputs.keyinfo.publicKey]"
        },
        "status": {
            "type": "object",
            "value": "[reference(variables('scriptName')).status]"
        }
    }
}