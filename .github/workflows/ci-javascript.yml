name: JavaScript CI
on:
  push:
    branches: [main]
  pull_request:
    paths:
      - 'javascript/**/*'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.js'
      - '**/*.mjs'
      - '**/*.cjs'
      - '**/*.json'
      - .github/workflows/ci-javascript.yml

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >>$GITHUB_OUTPUT

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
        name: Install Dependencies

      - run: yarn build
        name: Build

      - run: yarn lint
        name: Lint

      - run: yarn test
        name: Test

      - run: |
          git add -A
          git status
        name: Git status

      - run: yarn is_clean
        name: Check if repo is clean

      - name: Build and Publish Docker Container
        uses: darthtrevino/github-container-registry-build-push@main
        with:
          github-push-secret: ${{secrets.GITHUB_TOKEN}}
          docker-image-name: showwhy-frontend
          docker-image-tag:  latest
          dockerfile-path: ./javascript/webapp/Dockerfile
          build-context: ./javascript/webapp
          build-only: ${{ github.ref != 'refs/heads/main' }}
